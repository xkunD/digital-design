$date
	Sat Feb 18 18:07:40 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module reg_file_alu_tb $end
$var wire 8 ! t_cpu_out [7:0] $end
$var wire 1 " t_Zero $end
$var wire 8 # t_ALUResult [7:0] $end
$var reg 1 $ clk $end
$var reg 2 % t_ALUControl [1:0] $end
$var reg 1 & t_ALUSrc $end
$var reg 4 ' t_RA1 [3:0] $end
$var reg 4 ( t_RA2 [3:0] $end
$var reg 4 ) t_WA [3:0] $end
$var reg 8 * t_immediate [7:0] $end
$var reg 1 + t_write_enable $end
$scope module dut $end
$var wire 2 , ALUControl [1:0] $end
$var wire 1 & ALUSrc $end
$var wire 1 $ CLK $end
$var wire 4 - RA1 [3:0] $end
$var wire 4 . RA2 [3:0] $end
$var wire 4 / WA [3:0] $end
$var wire 8 0 immediate [7:0] $end
$var wire 1 + write_enable $end
$var wire 8 1 x_srcB [7:0] $end
$var wire 8 2 x_srcA [7:0] $end
$var wire 8 3 x_RD2 [7:0] $end
$var wire 8 4 cpu_out [7:0] $end
$var wire 1 " Zero $end
$var wire 8 5 ALUResult [7:0] $end
$scope module newalu $end
$var wire 2 6 ALUControl [1:0] $end
$var wire 8 7 SrcB [7:0] $end
$var wire 1 " Zero $end
$var wire 8 8 SrcA [7:0] $end
$var reg 8 9 ALUResult [7:0] $end
$upscope $end
$scope module newregfile $end
$var wire 8 : ALUResult [7:0] $end
$var wire 4 ; RA1 [3:0] $end
$var wire 4 < RA2 [3:0] $end
$var wire 8 = RD1 [7:0] $end
$var wire 8 > RD2 [7:0] $end
$var wire 4 ? WA [3:0] $end
$var wire 1 $ clk $end
$var wire 8 @ cpu_out [7:0] $end
$var wire 1 + write_enable $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx @
b0 ?
bx >
b0 =
b10 <
b0 ;
b1010 :
b1010 9
b0 8
b1010 7
b10 6
b1010 5
bx 4
bx 3
b0 2
b1010 1
b1010 0
b0 /
b10 .
b0 -
b10 ,
1+
b1010 *
b0 )
b10 (
b0 '
1&
b10 %
0$
b1010 #
0"
bx !
$end
#10
b1010 3
b1010 >
b1 )
b1 /
b1 ?
b1 (
b1 .
b1 <
1$
#20
b111 #
b111 5
b111 9
b111 :
b111 1
b111 7
b111 *
b111 0
0$
#30
b111 3
b111 >
1$
#40
b1110 #
b1110 5
b1110 9
b1110 :
0$
b111 2
b111 8
b111 =
b1 '
b1 -
b1 ;
#50
b10101 #
b10101 5
b10101 9
b10101 :
b1110 2
b1110 8
b1110 =
b1110 3
b1110 >
1$
#60
0$
#70
b11100 #
b11100 5
b11100 9
b11100 :
b10101 2
b10101 8
b10101 =
b10101 3
b10101 >
1$
#80
b1110 #
b1110 5
b1110 9
b1110 :
0$
b1111 )
b1111 /
b1111 ?
b11 %
b11 ,
b11 6
#90
b1110 !
b1110 4
b1110 @
1$
#100
b1010110 #
b1010110 5
b1010110 9
b1010110 :
b10111111 1
b10111111 7
0$
b10111111 *
b10111111 0
#110
b1010110 !
b1010110 4
b1010110 @
1$
#120
1"
b0 #
b0 5
b0 9
b0 :
b0 1
b0 7
0$
b0 %
b0 ,
b0 6
b0 *
b0 0
#130
b0 !
b0 4
b0 @
1$
