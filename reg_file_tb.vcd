$date
	Thu Feb 16 22:17:27 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module reg_file_tb $end
$var wire 8 ! cpu_out [7:0] $end
$var wire 8 " RD2 [7:0] $end
$var wire 8 # RD1 [7:0] $end
$var reg 8 $ ALUResult [7:0] $end
$var reg 4 % RA1 [3:0] $end
$var reg 4 & RA2 [3:0] $end
$var reg 4 ' WA [3:0] $end
$var reg 1 ( clk $end
$var reg 1 ) write_enable $end
$scope module dut $end
$var wire 8 * ALUResult [7:0] $end
$var wire 4 + RA1 [3:0] $end
$var wire 4 , RA2 [3:0] $end
$var wire 8 - RD1 [7:0] $end
$var wire 8 . RD2 [7:0] $end
$var wire 4 / WA [3:0] $end
$var wire 1 ( clk $end
$var wire 8 0 cpu_out [7:0] $end
$var wire 1 ) write_enable $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
b0 /
bx .
bx -
b10 ,
b1 +
b101 *
0)
0(
b0 '
b10 &
b1 %
b101 $
bx #
bx "
bx !
$end
#10
1(
#20
0(
#25
1)
#30
1(
#40
0(
#45
b111 $
b111 *
b1 '
b1 /
#50
b111 #
b111 -
1(
#60
0(
#65
b1101 $
b1101 *
b101 '
b101 /
#70
1(
#80
0(
#85
0)
#90
1(
#100
0(
#105
b1101 "
b1101 .
b101 &
b101 ,
#110
1(
#120
0(
#130
1(
#135
